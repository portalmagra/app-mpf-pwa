import { NextRequest, NextResponse } from 'next/server'
import OpenAI from 'openai'

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
  organization: null,
})

export async function POST(request: NextRequest) {
  try {
    const { answers, language = 'pt', detailed, userName } = await request.json()
    
    console.log('üéØ Iniciando an√°lise personalizada da Dra. Ana Slim...')
    console.log('üìä Respostas:', answers)
    console.log('üë§ Usu√°rio:', userName)

    // Criar prompt personalizado para Dra. Ana Slim
    const prompt = `
Voc√™ √© a Dra. Ana Slim, uma nutricionista brasileira especializada em bem-estar feminino. 
Analise as respostas do question√°rio e forne√ßa uma an√°lise personalizada e pr√°tica.

RESPOSTAS DO QUESTION√ÅRIO:
${JSON.stringify(answers, null, 2)}

${detailed ? `DETALHES ADICIONAIS:
${JSON.stringify(detailed, null, 2)}` : ''}

${userName ? `NOME DO USU√ÅRIO: ${userName}` : ''}

‚ö†Ô∏è INFORMA√á√ïES CR√çTICAS PARA CONSIDERAR:

${detailed?.usesMedication === 'Sim' ? `
üíä MEDICAMENTOS EM USO:
- Status: ${detailed.usesMedication}
- Detalhes: ${detailed.medicationDetails || 'N√£o especificado'}
- ‚ö†Ô∏è CR√çTICO: Todas as recomenda√ß√µes devem ser compat√≠veis com os medicamentos
- ‚ö†Ô∏è CR√çTICO: Evitar intera√ß√µes medicamentosas perigosas
` : ''}

${detailed?.usesSupplements === 'Sim' ? `
üíä SUPLEMENTOS EM USO:
- Status: ${detailed.usesSupplements}
- Detalhes: ${detailed.supplementsDetails || 'N√£o especificado'}
- ‚ö†Ô∏è IMPORTANTE: Considerar suplementos j√° em uso para evitar duplica√ß√£o
- ‚ö†Ô∏è IMPORTANTE: Verificar compatibilidade com novos suplementos
` : ''}

${detailed?.foodRestrictions === 'Sim' ? `
üö´ RESTRI√á√ïES ALIMENTARES:
- Status: ${detailed.foodRestrictions}
- Detalhes: ${detailed.foodRestrictionsDetails || 'N√£o especificado'}
- ‚ö†Ô∏è OBRIGAT√ìRIO: Todas as recomenda√ß√µes devem respeitar essas restri√ß√µes
- ‚ö†Ô∏è OBRIGAT√ìRIO: N√ÉO recomendar alimentos que violem as restri√ß√µes
` : ''}

${detailed?.healthIssues === 'Sim' ? `
üè• CONDI√á√ïES DE SA√öDE:
- Status: ${detailed.healthIssues}
- Detalhes: ${detailed.healthIssuesDetails || 'N√£o especificado'}
- ‚ö†Ô∏è CR√çTICO: Todas as recomenda√ß√µes devem ser seguras para essas condi√ß√µes
- ‚ö†Ô∏è CR√çTICO: Considerar limita√ß√µes e cuidados especiais
` : ''}

${detailed?.wakeUpTime || detailed?.sleepTime ? `
‚è∞ HOR√ÅRIOS DE SONO:
- Acorda: ${detailed.wakeUpTime || 'N√£o informado'}
- Dorme: ${detailed.sleepTime || 'N√£o informado'}
- Qualidade: ${detailed.sleepQuality || 'N√£o informado'}
- üí° IMPORTANTE: Personalizar recomenda√ß√µes baseadas nos hor√°rios
` : ''}

${detailed?.mainConcern ? `
üéØ PRINCIPAL PREOCUPA√á√ÉO:
- ${detailed.mainConcern}
- üí° FOCO: Priorizar solu√ß√µes para esta preocupa√ß√£o espec√≠fica
` : ''}

${detailed?.improvementAreas?.length > 0 ? `
üéØ √ÅREAS DE MELHORIA:
- ${detailed.improvementAreas.join(', ')}
- üí° FOCO: Direcionar recomenda√ß√µes para essas √°reas espec√≠ficas
` : ''}

INSTRU√á√ïES OBRIGAT√ìRIAS:
1. SEMPRE considere e respeite TODAS as restri√ß√µes alimentares mencionadas
2. SEMPRE considere TODAS as condi√ß√µes de sa√∫de mencionadas
3. SEMPRE considere medicamentos em uso para evitar intera√ß√µes
4. SEMPRE considere suplementos j√° em uso para evitar duplica√ß√£o
5. SEMPRE personalize baseado nos hor√°rios de sono informados
6. SEMPRE foque nas √°reas de melhoria espec√≠ficas mencionadas
7. N√ÉO recomende nada que viole restri√ß√µes ou cause intera√ß√µes
8. Forne√ßa alternativas seguras para cada limita√ß√£o
9. Use linguagem acolhedora e profissional
10. Inclua emojis para tornar mais visual e acolhedor
11. Inclua uma se√ß√£o "**Solu√ß√µes pr√°ticas:**" com 3-5 dicas espec√≠ficas

FORMATO DE RESPOSTA:
**An√°lise Personalizada:**
[Sua an√°lise detalhada e personalizada aqui, considerando TODAS as informa√ß√µes cr√≠ticas acima]

**Solu√ß√µes pr√°ticas:**
- [Dica 1 espec√≠fica com emoji, respeitando todas as restri√ß√µes]
- [Dica 2 espec√≠fica com emoji, respeitando todas as restri√ß√µes] 
- [Dica 3 espec√≠fica com emoji, respeitando todas as restri√ß√µes]
- [Dica 4 espec√≠fica com emoji, respeitando todas as restri√ß√µes]
- [Dica 5 espec√≠fica com emoji, respeitando todas as restri√ß√µes]

Responda em portugu√™s brasileiro, de forma acolhedora e profissional, com emojis.
`

    console.log('ü§ñ Enviando para OpenAI...')
    
    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: "Voc√™ √© a Dra. Ana Slim, uma nutricionista brasileira especializada em bem-estar feminino. Sempre responda em portugu√™s brasileiro de forma acolhedora e profissional, com emojis para tornar mais visual."
        },
        {
          role: "user", 
          content: prompt
        }
      ],
      max_tokens: 2000,
      temperature: 0.7,
    })

    const analysis = completion.choices[0]?.message?.content || 'An√°lise n√£o dispon√≠vel'
    console.log('‚úÖ An√°lise personalizada gerada!')

    // Extrair orienta√ß√µes pr√°ticas
    const extractPracticalGuidance = (analysis: string): string => {
      console.log('üîç Extraindo orienta√ß√µes pr√°ticas da an√°lise...')
      
      const guidanceMatch = analysis.match(/\*\*Solu√ß√µes pr√°ticas:\*\*([\s\S]*?)(?=\*\*|$)/i)
      if (guidanceMatch) {
        console.log('‚úÖ Encontrou se√ß√£o "Solu√ß√µes pr√°ticas"')
        return guidanceMatch[1].trim()
      }
      
      const variations = [
        /\*\*Orienta√ß√µes pr√°ticas:\*\*([\s\S]*?)(?=\*\*|$)/i,
        /\*\*Dicas pr√°ticas:\*\*([\s\S]*?)(?=\*\*|$)/i,
        /\*\*Recomenda√ß√µes:\*\*([\s\S]*?)(?=\*\*|$)/i,
        /\*\*A√ß√µes pr√°ticas:\*\*([\s\S]*?)(?=\*\*|$)/i
      ]
      
      for (const variation of variations) {
        const match = analysis.match(variation)
        if (match) {
          console.log('‚úÖ Encontrou orienta√ß√µes com varia√ß√£o')
          return match[1].trim()
        }
      }
      
      console.log('‚ö†Ô∏è Usando an√°lise completa como fallback')
      return analysis
    }

    const orientacoes = extractPracticalGuidance(analysis)

    // Gerar produtos recomendados baseados nas necessidades
    const generateRecommendedProducts = (answers: any[], detailed: any) => {
      const products = []
      
      // Analisar necessidades baseadas nas respostas e detalhes
      let needs: string[] = []
      const restrictions: string[] = []
      const medications: string[] = []
      const supplements: string[] = []
      
      // === AN√ÅLISE DE NECESSIDADES ===
      
      // Sono - considerar hor√°rios e qualidade
      if (detailed?.sleepQuality === 'Ruim' || detailed?.sleepTime || detailed?.wakeUpTime) {
        needs.push('sono')
      }
      
      // Energia - considerar √°reas de melhoria e preocupa√ß√µes
      if (detailed?.improvementAreas?.includes('Ter mais energia') || 
          detailed?.improvementAreas?.includes('Melhorar a concentra√ß√£o') ||
          detailed?.mainConcern?.toLowerCase().includes('cansa√ßo') ||
          detailed?.mainConcern?.toLowerCase().includes('energia')) {
        needs.push('energia')
      }
      
      // Emagrecimento - considerar preocupa√ß√µes e √°reas de melhoria
      if (detailed?.mainConcern?.toLowerCase().includes('peso') || 
          detailed?.improvementAreas?.includes('Perder peso') ||
          detailed?.improvementAreas?.includes('Desinflamar o corpo')) {
        needs.push('emagrecimento')
      }
      
      // Ansiedade/Estresse - considerar √°reas de melhoria
      if (detailed?.improvementAreas?.includes('Reduzir o estresse') ||
          detailed?.improvementAreas?.includes('Melhorar a concentra√ß√£o') ||
          detailed?.mainConcern?.toLowerCase().includes('estresse') ||
          detailed?.mainConcern?.toLowerCase().includes('ansiedade')) {
        needs.push('ansiedade')
      }
      
      // Intestino - considerar √°reas de melhoria
      if (detailed?.improvementAreas?.includes('Melhorar o intestino') ||
          detailed?.mainConcern?.toLowerCase().includes('intestino') ||
          detailed?.mainConcern?.toLowerCase().includes('digest√£o')) {
        needs.push('intestino')
      }
      
      // Imunidade - considerar √°reas de melhoria
      if (detailed?.improvementAreas?.includes('Fortalecer o sistema imunol√≥gico') ||
          detailed?.mainConcern?.toLowerCase().includes('imunidade') ||
          detailed?.mainConcern?.toLowerCase().includes('gripe')) {
        needs.push('imunidade')
      }
      
      // === AN√ÅLISE DE RESTRI√á√ïES E LIMITA√á√ïES ===
      
      // Restri√ß√µes alimentares
      if (detailed?.foodRestrictions === 'Sim' && detailed?.foodRestrictionsDetails) {
        const restrictionsText = detailed.foodRestrictionsDetails.toLowerCase()
        if (restrictionsText.includes('gl√∫ten') || restrictionsText.includes('gluten')) {
          restrictions.push('gluten-free')
        }
        if (restrictionsText.includes('lactose') || restrictionsText.includes('l√°cteo')) {
          restrictions.push('lactose-free')
        }
        if (restrictionsText.includes('vegano') || restrictionsText.includes('vegan')) {
          restrictions.push('vegan')
        }
        if (restrictionsText.includes('vegetariano') || restrictionsText.includes('vegetarian')) {
          restrictions.push('vegetarian')
        }
      }
      
      // Medicamentos em uso
      if (detailed?.usesMedication === 'Sim' && detailed?.medicationDetails) {
        const medsText = detailed.medicationDetails.toLowerCase()
        if (medsText.includes('anticoagulante') || medsText.includes('warfarina') || medsText.includes('aspirina')) {
          medications.push('anticoagulant')
        }
        if (medsText.includes('diabetes') || medsText.includes('metformina') || medsText.includes('insulina')) {
          medications.push('diabetes')
        }
        if (medsText.includes('press√£o') || medsText.includes('hipertens√£o') || medsText.includes('losartan')) {
          medications.push('hypertension')
        }
        if (medsText.includes('colesterol') || medsText.includes('estatina') || medsText.includes('sinvastatina')) {
          medications.push('cholesterol')
        }
      }
      
      // Suplementos j√° em uso
      if (detailed?.usesSupplements === 'Sim' && detailed?.supplementsDetails) {
        const suppsText = detailed.supplementsDetails.toLowerCase()
        if (suppsText.includes('vitamina d') || suppsText.includes('vitamin d')) {
          supplements.push('vitamin-d')
        }
        if (suppsText.includes('magn√©sio') || suppsText.includes('magnesium')) {
          supplements.push('magnesium')
        }
        if (suppsText.includes('b12') || suppsText.includes('vitamina b')) {
          supplements.push('vitamin-b')
        }
        if (suppsText.includes('√¥mega') || suppsText.includes('omega')) {
          supplements.push('omega-3')
        }
      }
      
      // === FILTRAR NECESSIDADES BASEADO EM RESTRI√á√ïES ===
      
      // Remover necessidades que conflitam com medicamentos
      if (medications.includes('anticoagulant')) {
        needs = needs.filter(need => !['emagrecimento'].includes(need)) // Evitar termog√™nicos
      }
      
      if (medications.includes('diabetes')) {
        needs = needs.filter(need => !['emagrecimento'].includes(need)) // Evitar termog√™nicos
      }
      
      // Se n√£o identificou necessidades espec√≠ficas, usar padr√£o seguro
      if (needs.length === 0) {
        needs.push('energia', 'sono')
      }
      
      // Mapear necessidades para produtos (considerando restri√ß√µes)
      const productMap = {
        'sono': {
          name: 'Melatonina Premium',
          description: 'Suplemento natural para melhorar a qualidade do sono',
          category: 'sono',
          benefits: ['Melhora do sono', 'Relaxamento', 'Qualidade do descanso'],
          price: '$24.99',
          rating: 4.7,
          savings: 25,
          restrictions: [], // Sem restri√ß√µes
          medications: [] // Sem intera√ß√µes conhecidas
        },
        'energia': {
          name: 'Complexo de Vitaminas B',
          description: 'Energia sustent√°vel e foco mental',
          category: 'energia', 
          benefits: ['Mais energia', 'Foco mental', 'Metabolismo ativo'],
          price: '$19.99',
          rating: 4.5,
          savings: 20,
          restrictions: [], // Sem restri√ß√µes
          medications: [] // Sem intera√ß√µes conhecidas
        },
        'emagrecimento': {
          name: 'Termog√™nico Natural',
          description: 'Acelera o metabolismo e queima de gordura',
          category: 'emagrecimento',
          benefits: ['Acelera metabolismo', 'Queima gordura', 'Energia'],
          price: '$29.99',
          rating: 4.3,
          savings: 30,
          restrictions: [], // Sem restri√ß√µes
          medications: ['anticoagulant', 'diabetes', 'hypertension'] // Intera√ß√µes conhecidas
        },
        'ansiedade': {
          name: 'Ashwagandha Org√¢nico',
          description: 'Reduz estresse e melhora o bem-estar',
          category: 'ansiedade',
          benefits: ['Reduz estresse', 'Melhora humor', 'Bem-estar'],
          price: '$22.99',
          rating: 4.6,
          savings: 22,
          restrictions: [], // Sem restri√ß√µes
          medications: ['hypertension'] // Intera√ß√£o com press√£o arterial
        },
        'intestino': {
          name: 'Probi√≥ticos Premium',
          description: 'Suplemento para sa√∫de intestinal e digest√£o',
          category: 'intestino',
          benefits: ['Sa√∫de intestinal', 'Digest√£o', 'Imunidade'],
          price: '$34.99',
          rating: 4.4,
          savings: 28,
          restrictions: ['lactose-free'], // Pode conter lactose
          medications: [] // Sem intera√ß√µes conhecidas
        },
        'imunidade': {
          name: 'Vitamina D3 + C',
          description: 'Fortalecimento do sistema imunol√≥gico',
          category: 'imunidade',
          benefits: ['Imunidade', 'Sa√∫de √≥ssea', 'Energia'],
          price: '$27.99',
          rating: 4.8,
          savings: 25,
          restrictions: [], // Sem restri√ß√µes
          medications: ['cholesterol'] // Intera√ß√£o com estatinas
        }
      }
      
      // Adicionar produtos baseados nas necessidades (m√°ximo 4)
      const uniqueNeeds = [...new Set(needs)].slice(0, 4)
      
      uniqueNeeds.forEach((need, index) => {
        if (productMap[need as keyof typeof productMap]) {
          const product = productMap[need as keyof typeof productMap]
          
          // Verificar se o produto √© compat√≠vel com restri√ß√µes e medicamentos
          let isCompatible = true
          let compatibilityReason = ''
          
          // Verificar restri√ß√µes alimentares
          if (product.restrictions && product.restrictions.length > 0) {
            for (const restriction of product.restrictions) {
              if (restrictions.includes(restriction)) {
                isCompatible = false
                compatibilityReason = `Incompat√≠vel com restri√ß√£o: ${restriction}`
                break
              }
            }
          }
          
          // Verificar intera√ß√µes medicamentosas
          if (product.medications && product.medications.length > 0) {
            for (const medication of product.medications) {
              if (medications.includes(medication)) {
                isCompatible = false
                compatibilityReason = `Intera√ß√£o medicamentosa: ${medication}`
                break
              }
            }
          }
          
          // Verificar se j√° usa o suplemento
          if (supplements.includes(need.replace('-', '_'))) {
            isCompatible = false
            compatibilityReason = 'J√° est√° usando este suplemento'
          }
          
          // Adicionar produto se for compat√≠vel
          if (isCompatible) {
            products.push({
              name: product.name,
              description: product.description,
              asin: `B00${1000 + index}`,
              price: product.price,
              rating: product.rating,
              category: product.category,
              benefits: product.benefits,
              amazonUrl: `https://www.amazon.com/s?k=${encodeURIComponent(product.name)}&tag=portalsolutio-20`,
              detailPageURL: `/produtos/${product.category}`,
              source: 'categoria',
              savings: product.savings,
              imageUrl: `https://via.placeholder.com/300x300/4ade80/ffffff?text=${product.name.replace(' ', '+')}`,
              featured: index === 0,
              shortUrl: `meuportalfit.com/produtos/${product.category}`,
              compatibility: {
                isCompatible: true,
                reason: 'Compat√≠vel com seu perfil'
              }
            })
          } else {
            console.log(`‚ö†Ô∏è Produto ${product.name} n√£o adicionado: ${compatibilityReason}`)
          }
        }
      })
      
      // Se n√£o tem produtos suficientes, adicionar produtos padr√£o seguros
      while (products.length < 4) {
        const defaultProducts = [
          {
            name: 'Multivitam√≠nico Completo',
            description: 'Suplemento completo para sua sa√∫de',
            category: 'vitaminas',
            benefits: ['Sa√∫de geral', 'Imunidade', 'Energia'],
            price: '$18.99',
            rating: 4.4,
            savings: 15,
            restrictions: [], // Sem restri√ß√µes
            medications: [] // Sem intera√ß√µes conhecidas
          },
          {
            name: '√îmega 3 Premium',
            description: '√Åcidos graxos essenciais para o cora√ß√£o',
            category: 'omega3',
            benefits: ['Sa√∫de cardiovascular', 'Anti-inflamat√≥rio', 'C√©rebro'],
            price: '$26.99',
            rating: 4.8,
            savings: 28,
            restrictions: [], // Sem restri√ß√µes
            medications: ['anticoagulant'] // Intera√ß√£o com anticoagulantes
          },
          {
            name: 'Magn√©sio Glicinato',
            description: 'Relaxamento muscular e qualidade do sono',
            category: 'sono',
            benefits: ['Relaxamento', 'Sono', 'M√∫sculos'],
            price: '$21.99',
            rating: 4.6,
            savings: 22,
            restrictions: [], // Sem restri√ß√µes
            medications: [] // Sem intera√ß√µes conhecidas
          },
          {
            name: 'Vitamina C Natural',
            description: 'Antioxidante para imunidade e energia',
            category: 'imunidade',
            benefits: ['Imunidade', 'Antioxidante', 'Energia'],
            price: '$16.99',
            rating: 4.5,
            savings: 18,
            restrictions: [], // Sem restri√ß√µes
            medications: [] // Sem intera√ß√µes conhecidas
          }
        ]
        
        const defaultProduct = defaultProducts[products.length - uniqueNeeds.length] as typeof defaultProducts[0] | undefined
        if (defaultProduct) {
          // Verificar compatibilidade do produto padr√£o
          let isCompatible = true
          let compatibilityReason = ''
          
          // Verificar restri√ß√µes alimentares
          if (defaultProduct.restrictions && defaultProduct.restrictions.length > 0) {
            for (const restriction of defaultProduct.restrictions) {
              if (restrictions.includes(restriction)) {
                isCompatible = false
                compatibilityReason = `Incompat√≠vel com restri√ß√£o: ${restriction}`
                break
              }
            }
          }
          
          // Verificar intera√ß√µes medicamentosas
          if (defaultProduct.medications && defaultProduct.medications.length > 0) {
            for (const medication of defaultProduct.medications) {
              if (medications.includes(medication)) {
                isCompatible = false
                compatibilityReason = `Intera√ß√£o medicamentosa: ${medication}`
                break
              }
            }
          }
          
          // Adicionar produto se for compat√≠vel
          if (isCompatible) {
            products.push({
              name: defaultProduct.name,
              description: defaultProduct.description,
              asin: `B00${2000 + products.length}`,
              price: defaultProduct.price,
              rating: defaultProduct.rating,
              category: defaultProduct.category,
              benefits: defaultProduct.benefits,
              amazonUrl: `https://www.amazon.com/s?k=${encodeURIComponent(defaultProduct.name)}&tag=portalsolutio-20`,
              detailPageURL: `/produtos/${defaultProduct.category}`,
              source: 'categoria',
              savings: defaultProduct.savings,
              imageUrl: `https://via.placeholder.com/300x300/3b82f6/ffffff?text=${defaultProduct.name.replace(' ', '+')}`,
              featured: false,
              shortUrl: `meuportalfit.com/produtos/${defaultProduct.category}`,
              compatibility: {
                isCompatible: true,
                reason: 'Compat√≠vel com seu perfil'
              }
            })
          } else {
            console.log(`‚ö†Ô∏è Produto padr√£o ${defaultProduct.name} n√£o adicionado: ${compatibilityReason}`)
          }
        }
      }
      
      return products.slice(0, 4) // Garantir m√°ximo de 4 produtos
    }

    const recommendedProducts = generateRecommendedProducts(answers, detailed)
    
    // Calcular estat√≠sticas
    const totalSavings = recommendedProducts.reduce((sum, product) => sum + product.savings, 0)
    const averageRating = recommendedProducts.reduce((sum, product) => sum + product.rating, 0) / recommendedProducts.length

    const response = {
      analysis,
      orientacoes,
      recommendedProducts,
      totalSavings,
      averageRating,
      userName: userName || 'Usu√°rio',
      language: language || 'pt'
    }

    console.log('üéâ Resposta personalizada gerada!')
    return NextResponse.json(response)

  } catch (error) {
    console.error('‚ùå Erro na an√°lise:', error)
    return NextResponse.json(
      { error: 'Erro interno do servidor' }, 
      { status: 500 }
    )
  }
}
